/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: 'sanity.imagePaletteSwatch';
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: 'sanity.imagePalette';
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: 'sanity.imageDimensions';
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: 'sanity.fileAsset';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type Geopoint = {
  _type: 'geopoint';
  lat?: number;
  lng?: number;
  alt?: number;
};

export type Course = {
  _type: 'course';
  dayId?: 1 | 2 | 3 | 4 | 5;
  timeFrom?:
    | '15:00'
    | '15:15'
    | '15:30'
    | '15:45'
    | '16:00'
    | '16:15'
    | '16:30'
    | '16:45'
    | '17:00'
    | '17:15'
    | '17:30'
    | '17:45'
    | '18:00';
  timeTo?:
    | '15:45'
    | '16:00'
    | '16:15'
    | '16:30'
    | '16:45'
    | '17:00'
    | '17:15'
    | '17:30'
    | '17:45'
    | '18:00'
    | '18:15'
    | '18:30'
    | '18:45'
    | '19:00';
  isFull?: boolean;
  price?: Price;
  discount?: number;
};

export type BlockContent = Array<
  | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: 'span';
        _key: string;
      }>;
      style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'blockquote';
      listItem?: 'bullet';
      markDefs?: Array<{
        href?: string;
        _type: 'link';
        _key: string;
      }>;
      level?: number;
      _type: 'block';
      _key: string;
    }
  | {
      asset?: {
        _ref: string;
        _type: 'reference';
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: 'image';
      _key: string;
    }
>;

export type SanityImageCrop = {
  _type: 'sanity.imageCrop';
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityImageHotspot = {
  _type: 'sanity.imageHotspot';
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageAsset = {
  _id: string;
  _type: 'sanity.imageAsset';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityAssetSourceData = {
  _type: 'sanity.assetSourceData';
  name?: string;
  id?: string;
  url?: string;
};

export type SanityImageMetadata = {
  _type: 'sanity.imageMetadata';
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type KidsCourse = {
  _id: string;
  _type: 'kidsCourse';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  dayId?: 1 | 2 | 3 | 4 | 5;
  age?: AgeCategory;
  timeFrom?:
    | '15:00'
    | '15:15'
    | '15:30'
    | '15:45'
    | '16:00'
    | '16:15'
    | '16:30'
    | '16:45'
    | '17:00'
    | '17:15'
    | '17:30'
    | '17:45'
    | '18:00';
  timeTo?:
    | '15:45'
    | '16:00'
    | '16:15'
    | '16:30'
    | '16:45'
    | '17:00'
    | '17:15'
    | '17:30'
    | '17:45'
    | '18:00'
    | '18:15'
    | '18:30'
    | '18:45'
    | '19:00';
  isFull?: boolean;
  price?: Price;
  discount?: number;
  swimmingPool?: {
    _ref: string;
    _type: 'reference';
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: 'swimmingPool';
  };
  categoryId?: 'basic' | 'advanced' | 'condition';
};

export type Price = {
  _type: 'price';
  priceSemester?: number;
  priceYear?: number;
};

export type Navigation = {
  _id: string;
  _type: 'navigation';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  description?: string;
};

export type Colors = {
  _id: string;
  _type: 'colors';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  description?: string;
};

export type SiteSettings = {
  _id: string;
  _type: 'siteSettings';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  description?: string;
};

export type Camp = {
  _id: string;
  _type: 'camp';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: 'imageAlt';
  };
  tag?: Array<string>;
  url?: string;
};

export type KidCourse = {
  _id: string;
  _type: 'kidCourse';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  swimmingPoolDetail?: {
    _ref: string;
    _type: 'reference';
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: 'swimmingPool';
  };
  basic?: {
    age?: AgeCategory;
    url?: string;
    availableCourses?: Array<
      {
        _key: string;
      } & Course
    >;
  };
  advanced?: {
    age?: AgeCategory;
    url?: string;
    availableCourses?: Array<
      {
        _key: string;
      } & Course
    >;
  };
  condition?: {
    age?: AgeCategory;
    url?: string;
    availableCourses?: Array<
      {
        _key: string;
      } & Course
    >;
  };
};

export type AgeCategory = {
  _type: 'ageCategory';
  ageFrom?: number;
  ageTo?: number;
};

export type SwimmingPool = {
  _id: string;
  _type: 'swimmingPool';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  url?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: 'imageAlt';
  };
  privateSwimmingPool?: boolean;
  isSchoolOrKindergartenAvailable?: boolean;
};

export type ImageAlt = {
  _type: 'imageAlt';
  asset?: {
    _ref: string;
    _type: 'reference';
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
  };
  hotspot?: SanityImageHotspot;
  crop?: SanityImageCrop;
  alt?: string;
};

export type MediaTag = {
  _id: string;
  _type: 'media.tag';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: Slug;
};

export type Slug = {
  _type: 'slug';
  current?: string;
  source?: string;
};
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ../../websites/kometa-web/src/libs/sanity/api.ts
// Variable: queryAvailableCourses
// Query: *[_type == "kidCourse"]{"id":_id,"swimmingPoolId":swimmingPoolDetail->._id,"name":swimmingPoolDetail->.name,"alt":swimmingPoolDetail->.image.alt,"image":swimmingPoolDetail->.image{asset->{...,metadata}},"url":swimmingPoolDetail->.url,"privateSwimmingPool":swimmingPoolDetail->.privateSwimmingPool,"isSchoolOrKindergartenAvailable":swimmingPoolDetail->.isSchoolOrKindergartenAvailable,}
export type QueryAvailableCoursesResult = Array<{
  id: string;
  swimmingPoolId: string | null;
  name: string | null;
  alt: string | null;
  image: {
    asset: {
      _id: string;
      _type: 'sanity.imageAsset';
      _createdAt: string;
      _updatedAt: string;
      _rev: string;
      originalFilename?: string;
      label?: string;
      title?: string;
      description?: string;
      altText?: string;
      sha1hash?: string;
      extension?: string;
      mimeType?: string;
      size?: number;
      assetId?: string;
      uploadId?: string;
      path?: string;
      url?: string;
      metadata: SanityImageMetadata | null;
      source?: SanityAssetSourceData;
    } | null;
  } | null;
  url: string | null;
  privateSwimmingPool: boolean | null;
  isSchoolOrKindergartenAvailable: boolean | null;
}>;
// Variable: filterQuery
// Query: *[_type == "post"]
export type FilterQueryResult = Array<never>;
// Variable: queryKidsCourses
// Query: *[_type == "post"][]
export type QueryKidsCoursesResult = Array<never>;
// Variable: queryCamps
// Query: *[_type == "camp"]{"id":_id,name,"alt":image.alt,image{asset->{...,metadata}},url,"tags":tag}[]
export type QueryCampsResult = Array<{
  id: string;
  name: string | null;
  alt: string | null;
  image: {
    asset: {
      _id: string;
      _type: 'sanity.imageAsset';
      _createdAt: string;
      _updatedAt: string;
      _rev: string;
      originalFilename?: string;
      label?: string;
      title?: string;
      description?: string;
      altText?: string;
      sha1hash?: string;
      extension?: string;
      mimeType?: string;
      size?: number;
      assetId?: string;
      uploadId?: string;
      path?: string;
      url?: string;
      metadata: SanityImageMetadata | null;
      source?: SanityAssetSourceData;
    } | null;
  } | null;
  url: string | null;
  tags: Array<string> | null;
}>;
